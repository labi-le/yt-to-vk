<?php

use DigitalStars\SimpleVK\SimpleVK as vk;

$videoID = $videoID ?? $payload['dl']['download']['id'];

try {
  $yt = new YoutubeParse($videoID);
} catch (\Throwable $th) {
  die($vk->msg('ü§¨ –§–ª—É–¥ –∫–æ–Ω—Ç—Ä–æ–ª—å –æ—Ç YouTube, –ø–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')->send());
}

$video = $yt->get_data();
$video['author'] = $video['author_name'];

$isDownload = YoutubeDB::get_video($videoID);

//–µ—Å–ª–∏ –≤–∏–¥–æ—Å –µ—Å—Ç—å –≤ –±–∞–∑–µ
if ($isDownload) {
  $vk->msg('–û–ø–∞, –Ω–∞—à—ë–ª —É —Å–µ–±—è –≤ –ø–æ–º–æ–π–∫–µ –≤–∏–¥–æ—Å')->addAttachment($isDownload)->send();;
} else {

  //–ø—Ä–æ–≤–µ—Ä—è–º —Ç–æ–∫–µ–Ω —é–∑–µ—Ä–∞ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
  try {
    $verifyToken = vk::create(User::getToken($user_id), VK_VERSION)->request('account.getProfileInfo', []);
  } catch (Exception $e) {
    die($vk->msg('
    –¢–æ–∫–µ–Ω —É—Å—Ç–∞—Ä–µ–ª, –ø–æ–ø—Ä–æ–±—É–π –µ–≥–æ –æ–±–Ω–æ–≤–∏—Ç—å
    
    –ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω?
    ‚ñ∂ –ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø—Ä–∞–≤–∞ –±–æ—Ç—É, –∏ —É—Å—Ç–∞–Ω–æ–≤–∏ —Ç–æ–∫–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π settoken *—Å—Å—ã–ª–∫–∞ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏*
    üîë https://vk.cc/aAoQHd')->send());
  }


  $message_id = $vk->msg('‚öô –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞—Ç–∞')->send();

  function api($method, array $params)
  {
    $data = file_get_contents(API_SLIVA . $method . '.php?' . http_build_query($params));
    return json_decode($data, true);
  }

  $download = api('download', ['id' => $video['id']]);
  sleep(2);

  if ($download['status'] === true) {
    $vk->editMessage($id, $message_id, ['message' => 'üñ•Ô∏è –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ ' . $download['size'] . "\nüñ• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö"]);

    //–µ—Å–ª–∏ –≤–∏–¥–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ –≤—Ç–µ–Ω—Ç–∞–∫–ª–∏
    $upload = api('upload', [
      'id' => $video['id'],
      'author' => $video['author'],
      'title' => $video['title'],
      // 'description' => $video['description'],
      'description' => '–û–ø–∏—Å–∞–Ω–∏–µ —Å—ä–µ–ª–∏ –∑–ª—ã–µ –≤–æ–ª–∫–∏',
      // 'album_id' => intval($local_album['album_id']),
      'album_id' => false,
      'group_id' => $data['group_id'],
      'access_token' => User::getToken($user_id),
      'filename' => $download['filename']
    ]);
    sleep(2);

    if ($upload['status'] === true) {
      $vk->editMessage($id, $message_id, [
        'message' => "‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ\n\n\n" . $video['title'],
        'attachment' => $upload['attachment']
      ]);

      YoutubeDB::add_video($videoID, $upload['attachment'], $video['author']);

      //—É–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ —Å —Å–µ—Ä–≤–µ—Ä–∞
      api('delete', ['filename' => $download['filename']]);
      sleep(1);
    } else {
      $vk->editMessage($id, $message_id, ['message' => 'ü§¨ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö']);
    }
  } else $vk->editMessage($id, $message_id, ['message' => 'ü§¨ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ —Å YouTube']);
}
